# Set TileJSON URL path prefix, ignoring X-Rewrite-URL header. Must begin with a `/`
base_path: /tiles

# Number of web server workers
worker_processes: 2

# Amount of memory (in MB) to use for caching tiles [default: 512, 0 to disable]
cache_size_mb: 128

# Database configuration. This can also be a list of PG configs.
postgres:
  connection_string: 'postgresql:///landuse?host=/var/run/postgresql/'

  #  If a spatial table has SRID 0, then this SRID will be used as a fallback
  default_srid: 4326

  # Maximum Postgres connections pool size [default: 20]
  pool_size: 10

  # Control the automatic generation of bounds for spatial tables [default: quick]
  # 'calc' - compute table geometry bounds on startup.
  # 'quick' - same as 'calc', but the calculation will be aborted if it takes more than 5 seconds.
  # 'skip' - do not compute table geometry bounds on startup.
  auto_bounds: skip

  # Enable automatic discovery of tables and functions.
  # You may set this to `false` to disable.
  auto_publish: false
  #auto_publish:
  #  # Optionally limit to just these schemas
  #  from_schemas:
  #    - public
  #    - my_schema
  #  # Here we enable both tables and functions auto discovery.
  #  # You can also enable just one of them by not mentioning the other,
  #  # or setting it to false.  Setting one to true disables the other one as well.
  #  # E.g. `tables: false` enables just the functions auto-discovery.
  #  tables:
  #    # Optionally set how source ID should be generated based on the table's name, schema, and geometry column
  #    source_id_format: 'table.{schema}.{table}.{column}'
  #    # Add more schemas to the ones listed above
  #    from_schemas: my_other_schema
  #    # A table column to use as the feature ID
  #    # If a table has no column with this name, `id_column` will not be set for that table.
  #    # If a list of strings is given, the first found column will be treated as a feature ID.
  #    id_columns: feature_id
  #    # Boolean to control if geometries should be clipped or encoded as is, optional, default to true
  #    clip_geom: true
  #    # Buffer distance in tile coordinate space to optionally clip geometries, optional, default to 64
  #    buffer: 64
  #    # Tile extent in tile coordinate space, optional, default to 4096
  #    extent: 4096
  #  functions:
  #    # Optionally set how source ID should be generated based on the function's name and schema
  #    source_id_format: '{schema}.{function}'
      
  # Associative arrays of table sources
  tables:
    landuse_coverage_per_municipality:
      ## ID of the MVT layer (optional, defaults to table name)
      #layer_id: landuse_coverage_per_municipality
      
      # Table schema (required)
      schema: public
      
      # Table name (required)
      table: landuse_coverage_per_municipality
      
      # Geometry SRID (required)
      srid: 4326
      
      # Geometry column name (required)
      geometry_column: city_geom
      
      # Feature id column name
      id_column: ~
      
      # An integer specifying the minimum zoom level
      minzoom: 0
      
      # An integer specifying the maximum zoom level. MUST be >= minzoom
      maxzoom: 14
      
      # The maximum extent of available map tiles. Bounds MUST define an area
      # covered by all zoom levels. The bounds are represented in WGS:84
      # latitude and longitude values, in the order left, bottom, right, top.
      # Values may be integers or floating point numbers.
      bounds: [5.86,47.27,15.05,55.1]
      
      # Tile extent in tile coordinate space
      extent: 4096
      
      # Buffer distance in tile coordinate space to optionally clip geometries
      buffer: 64
      
      # Boolean to control if geometries should be clipped or encoded as is
      clip_geom: true
      
      # Geometry type
      geometry_type: GEOMETRY
      
      # List of columns, that should be encoded as tile properties (required)
      properties:
        area_size: float8
        city_area: float8
        city_id: int8
        city_name: text
    multipolygonitis_score:
      schema: public
      table: multipolygonitis_score
      srid: 4326
      geometry_column: city_geom
      id_column: ~
      minzoom: 0
      maxzoom: 14
      bounds: [5.86,47.27,15.05,55.1]
      extent: 4096
      buffer: 64
      clip_geom: true
      geometry_type: GEOMETRY
      properties:
        landuse_area: float8
        landuse_count: int8
        multipolygon_area: float8
        multipolygon_count: int8
        city_id: int8
        city_name: text
        city_area: float8
    roads_landuse_boundary_fraction_per_city:
      schema: public
      table: roads_landuse_boundary_fraction_per_city
      srid: 4326
      geometry_column: city_geom
      id_column: ~
      minzoom: 0
      maxzoom: 14
      bounds: [5.86,47.27,15.05,55.1]
      extent: 4096
      buffer: 64
      clip_geom: true
      geometry_type: GEOMETRY
      properties:
        landuse_boundaries_on_roads_fraction: float8
        landuse_boundaries_on_roads: float8
        landuse_boundary_length: float8
        roads_as_landuse_boundary_fraction: float8
        roads_as_landuse_boundary_length: float8
        road_network_length: float8
        coverage_fraction: float8
        city_id: int8
        city_name: text
  
#  # Associative arrays of function sources
#  functions:
#    function_source_id:
#      # Schema name (required)
#      schema: public
#      
#      # Function name (required)
#      function: function_zxy_query
#      
#      # An integer specifying the minimum zoom level
#      minzoom: 0
#      
#      # An integer specifying the maximum zoom level. MUST be >= minzoom
#      maxzoom: 30
#      
#      # The maximum extent of available map tiles. Bounds MUST define an area
#      # covered by all zoom levels. The bounds are represented in WGS:84
#      # latitude and longitude values, in the order left, bottom, right, top.
#      # Values may be integers or floating point numbers.
#      bounds: [-180.0, -90.0, 180.0, 90.0]

## Publish PMTiles files from local disk or proxy to a web server
#pmtiles:
#  paths:
#    # scan this whole dir, matching all *.pmtiles files
#    - /dir-path
#    # specific pmtiles file will be published as a pmt source (filename without extension)
#    - /path/to/pmt.pmtiles
#    # A web server with a PMTiles file that supports range requests
#    - https://example.org/path/tiles.pmtiles
#  sources:
#    # named source matching source name to a single file
#    pm-src1: /path/to/pmt.pmtiles
#    # A named source to a web server with a PMTiles file that supports range requests
#    pm-web2: https://example.org/path/tiles.pmtiles
    
## Publish MBTiles files
#mbtiles:
#  paths:
#    # scan this whole dir, matching all *.mbtiles files
#    - /dir-path
#    # specific mbtiles file will be published as mbtiles2 source
#    - /path/to/mbtiles.mbtiles
#  sources:
#    # named source matching source name to a single file
#    mb-src1: /path/to/mbtiles1.mbtiles

## Sprite configuration
#sprites:
#  paths:
#    # all SVG files in this dir will be published as a "my_images" sprite source
#    - /path/to/my_images
#  sources:
#    # SVG images in this directory will be published as a "my_sprites" sprite source
#    my_sprites: /path/to/some_dir
#
## Font configuration
#fonts:
#  # A list of *.otf, *.ttf, and *.ttc font files and dirs to search recursively.
#  - /path/to/font/file.ttf
#  - /path/to/font_dir
